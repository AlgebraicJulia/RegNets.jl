# # Regulatory Networks with Lotka-Volterra Semantics


using RegNets, RegNets.ASKEMRegNets
using Catlab.CategoricalAlgebra, Catlab.Graphics
using JSON, HTTP, OrdinaryDiffEq, Plots

# ## ACSet Schemas
#
# ### Basic Signed Graph Schema
#
# The basic structure of a regulatory network can be represented by a signed graph. This is a visualization of that basic ACSet schema.

to_graphviz(SchSignedGraph, edge_attrs=Dict(:len=>"1.5"))

# ### ASKEM RegNet Schema
#
# For our regulatory network models in ASKEM we also want to have labels on our edges and vertices as well as capture the rates and initial concentrations along with this. We can easily extend our schema with these added attributes:

to_graphviz(SchASKEMRegNet, edge_attrs=Dict(:len=>"1.5"))

# ## Load the model

lotka_volterra = HTTP.get(
  "https://raw.githubusercontent.com/DARPA-ASKEM/Model-Representations/main/regnet/examples/lotka_volterra.json"
).body |> String |> parse_askem_model

# ## Simulate the model

ODEProblem(
  vectorfield(lotka_volterra), # generate the vectorfield
  lotka_volterra[:initial],    # get the initial concentrations
  (0.0, 100.0),                # set the time period
  lotka_volterra,              # pass in model which contains the rate parameters
  alg=Tsit5()
) |> solve |> plot

# ## Autogenerated JSON Serialization

# ### Serialize the model

JSON.print(generate_json_acset(lotka_volterra), 2)

# ### Serialize the ACSet schema

JSON.print(generate_json_acset_schema(SchASKEMRegNet), 2)
